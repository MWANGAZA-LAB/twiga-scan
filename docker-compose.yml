version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/twiga_scan
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=["http://localhost:3000", "http://frontend:3000"]
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - twiga-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - twiga-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=twiga_scan
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - twiga-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - twiga-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - twiga-network

volumes:
  postgres_data:
  redis_data:

networks:
  twiga-network:
    driver: bridge
